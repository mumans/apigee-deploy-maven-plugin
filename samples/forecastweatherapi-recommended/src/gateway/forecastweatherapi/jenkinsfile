#!groovyâ€‹
pipeline {
    agent { dockerfile true }

    environment {
        APIGEE_EVAL_COMMON_CREDS = credentials('f820b62b-cf5d-46fd-b07a-3c6800d17bad')
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        disableConcurrentBuilds()
        timeout(time: 10, unit: 'MINUTES')
    }

    triggers {
        pollSCM('H/24 * * * *')
    }

    stages {

        stage ('Initialize') {
            steps {
                sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                '''
            }
        }   

        stage('Prepare environment') {
            steps {
                script {
                    echo "${env.BRANCH_NAME}"
                    if (env.BRANCH_NAME == 'dev') {
                        MVN_PROFILE = "dev"
                    } else if (env.BRANCH_NAME == 'master') {
                        MVN_PROFILE = "test" // TODO : remettre prod
                    } else if (env.BRANCH_NAME == 'rec') {
                        MVN_PROFILE = "rec" 
                    } else if (env.BRANCH_NAME == 'hors-production') {
                        MVN_PROFILE = "hors-production"
                    } else {
                        currentBuild.result = 'ABORTED'
                        error("${env.BRANCH_NAME} was not configured in Jenkinsfile")
                    }
                }
            }
        }

        stage ('Build and deploy') {
            steps {
                dir ('samples/forecastweatherapi-recommended/src/gateway/forecastweatherapi') {
                    sh 'printenv'
                    sh "mvn install -P=test -Dusername=${env.APIGEE_EVAL_COMMON_CREDS_USR} -Dpassword=${env.APIGEE_EVAL_COMMON_CREDS_PSW} -DpomFile=./pom.xml" 
                    sh 'printenv'
                }
            }
            post {
                success {
                    //junit 'target/surefire-reports/**/*.xml' 
                }
            }
        }

        stage ('Tests:Integration') {
            steps {
                // Tests d'integration
                dir ('samples/forecastweatherapi-recommended/src/gateway/forecastweatherapi') {
                }
            }
        }

        stage ('Tests:Peformence') {
            when {
                environment name: 'MVN_PROFILE', value: 'test'
            }
            steps {
                dir ('samples/forecastweatherapi-recommended/src/gateway/forecastweatherapi') {
                    sh "mvn jmeter:jmeter -Ptest -Dusername=${env.APIGEE_EVAL_COMMON_CREDS_USR} -Dpassword=${env.APIGEE_EVAL_COMMON_CREDS_PSW} -Dorg=testmyapi -DtestData=weather_test.csv -DthreadNum=5 -DrampUpPeriodSecs=5 -DloopCount=2"
                }
            }
        }
    }

    post {
        always {
            // Publish all tests results
            echo "post message"
        }
        failure {  
             //mail bcc: '', body: "<b>Apigee</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: '', mimeType: 'text/html', replyTo: '', subject: "ERROR CI: Project name -> ${env.JOB_NAME}", to: "foo@foomail.com";  
         }
    }
}
